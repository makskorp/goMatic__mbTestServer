{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["schema","uiSchema","App","Container","fluid","Row","Col","xs","ButtonGroup","Button","variant","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAIMA,EAAS,CACb,MAAS,yDACT,KAAQ,SACR,OAAU,yDACV,SAAY,CACV,SAEF,WAAc,CACZ,KAAQ,CACN,KAAQ,UACR,MAAS,OACT,SAAW,GAEb,OAAU,CACR,KAAQ,SACR,MAAS,SACT,KAAQ,CAAC,SAAU,OACnB,QAAW,UAEb,OAAU,CACR,KAAQ,SACR,MAAS,wHACT,KAAQ,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,IAC3B,QAAW,IAEb,KAAQ,CACN,KAAQ,SACR,MAAS,sCACT,QAAW,EACX,QAAW,MACX,QAAW,KAEb,MAAS,CACP,KAAQ,SACR,MAAS,+GACT,QAAW,EACX,QAAW,MACX,QAAW,SAKXC,EAAW,CACf,MAAS,CACP,gBAAgB,IA2BLC,EAvBH,WACV,OAAO,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACH,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,oFAEF,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,wEAEF,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,IAAD,CAAMP,OAAQA,EAAQC,SAAUA,EAAhC,SACE,eAACO,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,SAA/B,kBACA,cAACF,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,SAA/B,gBACA,cAACF,EAAA,EAAD,CAAQC,QAAQ,SAASC,KAAK,SAA9B,8BCtDCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.303fc8b3.chunk.js","sourcesContent":["import Form from \"@rjsf/bootstrap-4\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Button, ButtonGroup } from \"react-bootstrap\"\n\nconst schema = {\n  \"title\": \"Настройки\",\n  \"type\": \"object\",\n  \"submit\": \"Запустить\",\n  \"required\": [\n    \"start\"\n  ],\n  \"properties\": {\n    \"swap\": {\n      \"type\": \"boolean\",\n      \"title\": \"swap\",\n      \"default\": false\n    },\n    \"endian\": {\n      \"type\": \"string\",\n      \"title\": \"endian\",\n      \"enum\": [\"little\", \"big\"],\n      \"default\": \"little\"\n    },\n    \"period\": {\n      \"type\": \"number\",\n      \"title\": \"период обновлений, сек\",\n      \"enum\": [1, 5, 10, 15, 30, 60],\n      \"default\": 10,\n    },\n    \"port\": {\n      \"type\": \"number\",\n      \"title\": \"порт (0..65533)\",\n      \"minimum\": 0,\n      \"maximum\": 65535,\n      \"default\": 502\n    },\n    \"start\": {\n      \"type\": \"number\",\n      \"title\": \"стартовый регистр (0..65533)\",\n      \"minimum\": 0,\n      \"maximum\": 65533,\n      \"default\": 30001\n    }\n  }\n}\n\nconst uiSchema = {\n  \"start\": {\n    \"ui:autofocus\": true\n  }\n}\n\nconst App = () => {\n  return <Container fluid>\n      <Row>\n        <Col xs={5}>\n          <h5>Значения</h5>\n        </Col>\n        <Col xs={5}>\n          <h5>Журнал</h5>\n        </Col>\n        <Col xs={2}>\n          <Form schema={schema} uiSchema={uiSchema}>\n            <ButtonGroup>\n              <Button variant=\"primary\" type=\"submit\">Save</Button>\n              <Button variant=\"success\" type=\"submit\">On</Button>\n              <Button variant=\"danger\" type=\"submit\">Off</Button>\n            </ButtonGroup>\n          </Form>\n        </Col>\n      </Row>\n  </Container>\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}